1. Data Cleansing Steps
In a single query, perform the following operations and generate a new table in the data_mart schema named clean_weekly_sales:

1. Convert the week_date to a DATE format
2. Add a week_number as the second column for each week_date value, for example any value from the 1st of January to 7th of January will be 1, 8th to 14th will be 2 etc
3. Add a month_number with the calendar month for each week_date value as the 3rd column
4. Add a calendar_year column as the 4th column containing either 2018, 2019 or 2020 values
5. Add a new column called age_band after the original segment column using the following mapping on the number inside the segment value
segment	age_band
1	Young Adults
2	Middle Aged
3 or 4	Retirees
6. Add a new demographic column using the following mapping for the first letter in the segment values:
segment	demographic
C	Couples
F	Families
7. Ensure all null string values with an "unknown" string value in the original segment column as well as the new age_band and demographic columns
8. Generate a new avg_transaction column as the sales value divided by transactions rounded to 2 decimal places for each record

WITH CTE AS 
(SELECT to_date(week_date, 'dd/mm/yy') AS week_date,
 EXTRACT (week FROM to_date(week_date, 'dd/mm/yy')) AS week_number,
 EXTRACT (month FROM to_date(week_date, 'dd/mm/yy')) AS month_number,
 EXTRACT (year FROM to_date(week_date, 'dd/mm/yy')) AS calender_year, region, platform, customer_type,
 CASE
 WHEN segment LIKE '_1' THEN 'Young Adults'
 WHEN segment LIKE '_2' THEN 'Middle Aged'
 WHEN segment LIKE '_3' OR segment LIKE '_4' THEN 'Retirees'
 ELSE 'unknown'
 END AS age_band,
 CASE
 WHEN segment LIKE 'C_' THEN 'Couples'
 WHEN segment LIKE 'F_' THEN 'Families'
 ELSE 'unknown'
 END AS demographic,
 transactions, sales,
 ROUND(1.0*sales/transactions,2) AS avg_tansactions
FROM data_mart.weekly_sales)

SELECT *
FROM CTE
;

2. Data Exploration
1. What day of the week is used for each week_date value?

SELECT DISTINCT(to_char(week_date, 'Day')) AS day_of_week
FROM CTE
;

2. What range of week numbers are missing from the dataset?

,
CTE2 AS (SELECT generate_series(1,52) AS missing_week)

SELECT missing_week
FROM CTE2
WHERE missing_week
NOT IN (SELECT DISTINCT(week_number)
FROM CTE)
ORDER BY 1
;

3. How many total transactions were there for each year in the dataset?

SELECT calender_year, SUM(transactions)
FROM CTE
GROUP BY 1
ORDER BY 1
;

4. What is the total sales for each region for each month?

SELECT region, month_number, SUM(sales) AS total_sales
FROM CTE
GROUP BY 1,2
ORDER BY 1,2
;

5. What is the total count of transactions for each platform

SELECT platform, SUM(transactions)
FROM CTE
GROUP BY 1
ORDER BY 1
;

6. What is the percentage of sales for Retail vs Shopify for each month?

SELECT month_number,
ROUND(100.0*retail_sales/(retail_sales+shopify_sales),2) AS retail_percentage,
ROUND(100.0*shopify_sales/(retail_sales+shopify_sales),2) AS shopify_percentage
FROM
(
SELECT month_number,
SUM(CASE
	WHEN platform = 'Retail' THEN sales
END) AS retail_sales,
SUM(CASE
	WHEN platform = 'Shopify' THEN sales
END) AS shopify_sales
FROM CTE
GROUP BY 1
ORDER BY 1
  ) temp
;

7. What is the percentage of sales by demographic for each year in the dataset?

SELECT calender_year,
ROUND(100.0 * couples_sales / (families_sales + couples_sales),2) AS couples_percentage,
ROUND(100.0 * families_sales / (families_sales + couples_sales),2) AS families_percentage
FROM
(
SELECT calender_year,
SUM(CASE
WHEN demographic = 'Couples' THEN sales
END) AS couples_sales,
SUM(CASE
WHEN demographic = 'Families' THEN sales
END) AS families_sales
FROM CTE
GROUP BY 1
ORDER BY 1
  ) temp
;

8. Which age_band and demographic values contribute the most to Retail sales?

SELECT age_band, demographic
FROM CTE
WHERE platform = 'Retail'
GROUP BY 1,2
ORDER BY sum(sales) DESC
LIMIT 1
;

9. Can we use the avg_transaction column to find the average transaction size for each year for Retail vs Shopify? If not - how would you calculate it instead?

SELECT calender_year, platform, SUM(sales)/SUM(transactions), ROUND(AVG(avg_transactions),2)
FROM CTE
GROUP BY 1,2
ORDER BY 1,2
;

3. Before & After Analysis
This technique is usually used when we inspect an important event and want to inspect the impact before and after a certain point in time.

Taking the week_date value of 2020-06-15 as the baseline week where the Data Mart sustainable packaging changes came into effect.

We would include all week_date values for 2020-06-15 as the start of the period after the change and the previous week_date values would be before

Using this analysis approach - answer the following questions:

What is the total sales for the 4 weeks before and after 2020-06-15? What is the growth or reduction rate in actual values and percentage of sales?
What about the entire 12 weeks before and after?
How do the sale metrics for these 2 periods before and after compare with the previous years in 2018 and 2019?
4. Bonus Question
Which areas of the business have the highest negative impact in sales metrics performance in 2020 for the 12 week before and after period?

region
platform
age_band
demographic
customer_type
Do you have any further recommendations for Dannyâ€™s team at Data Mart or any interesting insights based off this analysis?
