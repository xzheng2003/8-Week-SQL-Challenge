2. Digital Analysis
Using the available datasets - answer the following questions using a single query for each one:

1. How many users are there?

SELECT COUNT(DISTINCT user_id) AS no_of_users
FROM clique_bait.users
;

2. How many cookies does each user have on average?

SELECT ROUND(AVG(cookie_no),2) AS avg_cookie
FROM
(
SELECT user_id, COUNT(cookie_id) AS cookie_no
FROM clique_bait.users
GROUP BY 1
  ) temp
;

3. What is the unique number of visits by all users per month?

SELECT EXTRACT(MONTH FROM event_time) AS month, COUNT(DISTINCT visit_id) AS no_of_visits
FROM clique_bait.events
GROUP BY 1
ORDER BY 1
;

4. What is the number of events for each event type?

SELECT event_type, COUNT(*) AS no_of_events
FROM clique_bait.events
GROUP BY 1
ORDER BY 1
;

5. What is the percentage of visits which have a purchase event?

SELECT ROUND(100.0*purchase_event/all_event,2) AS percentage_of_purcahse
FROM
(
SELECT COUNT(DISTINCT visit_id) AS all_event,
COUNT(CASE
 WHEN event_type = 3 THEN visit_id
END) AS purchase_event
FROM clique_bait.events
  ) temp
;

6. What is the percentage of visits which view the checkout page but do not have a purchase event?

SELECT 
ROUND(100.0* SUM(CASE
	WHEN no_of_view_for_checkout > 0 AND purchase_event = 0 THEN 1 ELSE 0
END) / COUNT(*),2) AS checkout_but_no_purchase
FROM
(
SELECT visit_id,
COUNT(CASE
 WHEN event_type = 3 THEN visit_id
END) AS purchase_event,
COUNT(CASE
 WHEN page_id = 12 AND event_type = 1 THEN visit_id
END) AS no_of_view_for_checkout
FROM clique_bait.events
GROUP BY 1
  ) temp
;

7. What are the top 3 pages by number of views?

SELECT page_name, COUNT(*)
FROM clique_bait.events AS e
JOIN clique_bait.page_hierarchy AS p
ON e.page_id = p.page_id
WHERE event_type = 1
GROUP BY 1
ORDER BY 2 DESC
LIMIT 3
;

8. What is the number of views and cart adds for each product category?

SELECT product_category, 
SUM(CASE
	WHEN event_type = 1 THEN 1 ELSE 0
END) AS no_view,
SUM(CASE
	WHEN event_type = 2 THEN 1 ELSE 0
END) AS cart_add
FROM clique_bait.events AS e
JOIN clique_bait.page_hierarchy AS p
ON e.page_id = p.page_id
WHERE product_category IS NOT NULL
GROUP BY 1
;

9. What are the top 3 products by purchases? (REVISE)

SELECT page_name,count(*) as purchased_times
FROM clique_bait.events e 
JOIN clique_bait.page_hierarchy h 
ON e.page_id = h.page_id 
WHERE visit_id IN (SELECT visit_id FROM clique_bait.events WHERE event_type = 3) 
AND event_type = 2
GROUP BY 1
ORDER BY 2 DESC
LIMIT 3;

3. Product Funnel Analysis
Using a single SQL query - create a new output table which has the following details:
How many times was each product viewed?
How many times was each product added to cart?
How many times was each product added to a cart but not purchased (abandoned)?
How many times was each product purchased?

WITH CTE AS 
(SELECT page_name, 
SUM(CASE
 WHEN event_type = 1 THEN 1 ELSE 0
END) AS no_view,
 SUM(CASE
 WHEN event_type = 2 THEN 1 ELSE 0
END) AS added_cart,
 SUM(CASE
 WHEN event_type = 2 AND temp.visit_id IS NULL THEN 1 ELSE 0
END) AS abandoned,
 SUM(CASE
 WHEN event_type = 2 AND temp.visit_id IS NOT NULL THEN 1 ELSE 0
END) AS purchased
FROM clique_bait.events AS e
JOIN clique_bait.page_hierarchy AS h
 ON e.page_id = h.page_id
LEFT JOIN (SELECT visit_id FROM clique_bait.events WHERE event_type = 3) temp
 ON e.visit_id = temp.visit_id
 WHERE e.page_id NOT IN (1,2,12,13)
 GROUP BY 1
 )

SELECT *
FROM CTE
;

Additionally, create another table which further aggregates the data for the above points but this time for each product category instead of individual products.

WITH CTE AS 
(SELECT product_category, 
SUM(CASE
 WHEN event_type = 1 THEN 1 ELSE 0
END) AS no_view,
 SUM(CASE
 WHEN event_type = 2 THEN 1 ELSE 0
END) AS added_cart,
 SUM(CASE
 WHEN event_type = 2 AND temp.visit_id IS NULL THEN 1 ELSE 0
END) AS abandoned,
 SUM(CASE
 WHEN event_type = 2 AND temp.visit_id IS NOT NULL THEN 1 ELSE 0
END) AS purchased
FROM clique_bait.events AS e
JOIN clique_bait.page_hierarchy AS h
 ON e.page_id = h.page_id
LEFT JOIN (SELECT visit_id FROM clique_bait.events WHERE event_type = 3) temp
 ON e.visit_id = temp.visit_id
 WHERE product_category IS NOT NULL
 GROUP BY 1
 )

SELECT *
FROM CTE
;

Use your 2 new output tables - answer the following questions:
1. Which product had the most views, cart adds and purchases?

 SELECT 
 (SELECT page_name FROM CTE ORDER BY no_view DESC LIMIT 1) as most_view,
 (SELECT page_name FROM CTE ORDER BY added_cart DESC LIMIT 1) as most_cart,
 (SELECT page_name FROM CTE ORDER BY purchased DESC LIMIT 1) as most_purchase
 ;

2. Which product was most likely to be abandoned?

 SELECT 
 (SELECT page_name FROM CTE ORDER BY abandoned DESC LIMIT 1) as most_likely_abandon
 ;

3. Which product had the highest view to purchase percentage?

 SELECT page_name, ROUND(100.0*purchased/no_view,2)
 FROM CTE
 ORDER BY ROUND(100.0*purchased/no_view,2) desc
 LIMIT 1
 ;

4. What is the average conversion rate from view to cart add?

SELECT ROUND(AVG(conversion_rate),2) AS avg_conversion
 FROM
 (
 SELECT page_name, ROUND(100.0*added_cart/no_view,2) AS conversion_rate
 FROM CTE
   ) temp
 ;

5. What is the average conversion rate from cart add to purchase?

 SELECT ROUND(AVG(conversion_rate),2) AS avg_conversion
 FROM
 (
 SELECT page_name, ROUND(100.0*purchased/added_cart,2) AS conversion_rate
 FROM CTE
   ) temp
 ;

3. Campaigns Analysis
Generate a table that has 1 single row for every unique visit_id record and has the following columns:
user_id
visit_id
visit_start_time: the earliest event_time for each visit
page_views: count of page views for each visit
cart_adds: count of product cart add events for each visit
purchase: 1/0 flag if a purchase event exists for each visit
campaign_name: map the visit to a campaign if the visit_start_time falls between the start_date and end_date
impression: count of ad impressions for each visit
click: count of ad clicks for each visit
(Optional column) cart_products: a comma separated text value with products added to the cart sorted by the order they were added to the cart (hint: use the sequence_number)
Use the subsequent dataset to generate at least 5 insights for the Clique Bait team - bonus: prepare a single A4 infographic that the team can use for their management reporting sessions, be sure to emphasise the most important points from your findings.

Some ideas you might want to investigate further include:
1. Identifying users who have received impressions during each campaign period and comparing each metric with other users who did not have an impression event
2. Does clicking on an impression lead to higher purchase rates?
3. What is the uplift in purchase rate when comparing users who click on a campaign impression versus users who do not receive an impression? What if we compare them with users who just an impression but do not click?
4. What metrics can you use to quantify the success or failure of each campaign compared to eachother?
